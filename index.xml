<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>磊磊落落</title><link>https://olzhy.github.io/</link><description>Recent content on 磊磊落落</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>leileiluoluo@leileiluoluo.com (磊磊落落)</managingEditor><webMaster>leileiluoluo@leileiluoluo.com (磊磊落落)</webMaster><lastBuildDate>Sun, 17 Dec 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://olzhy.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>三識董宇輝</title><link>https://olzhy.github.io/posts/dongyuhui.html</link><pubDate>Sun, 17 Dec 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/dongyuhui.html</guid><description>說實話，至今沒有完整的看過一次董宇輝直播的視頻，僅僅是翻看過幾個錄播片段，但很有感觸，所以寫了這段非常感性又直覺的文字，至於講的對與不對，還請讀到這篇文章的人包涵。
初識董宇輝 不記得是去年的哪個月份，同事們茶餘飯後談論說某音上一位新東方的英語老師直播帶貨突然火了。因爲我沒有安裝某音，也沒有去查閱該話題相關的太多資料，只從大家的談論中勾勒出關於董宇輝最初的幾個印象標籤：新東方轉型主播、喜歡在直播間講課、突然火了。
後來不知哪一天，又偶然間從哪裏看到董宇輝這個名字，就抱着好奇心去看了幾段董宇輝直播的視頻片段。給我的氣氛是：一個人執着的、孤獨的、真誠的在講一個故事，然後一羣人莫名的突然想坐下來聽一聽。原來某音上不全是靠着精準的算法去肆無忌憚發掘人性貪慾的視頻，竟然也有一塊特別少有的、久違的可以讓人的心安坐下來的地方。翻看視頻的時候，不知怎麼的，感覺董宇輝就像一個魔法師，感覺稍稍有那麼幾秒，突然內心沒有了躁動，彷彿久違的看到了自己內心最初的真與善良。是的，看董宇輝不是看到了董宇輝，是看到了自己內心本來的樣子。
董宇輝讓我看到了什麼是腹有詩書氣自華。董宇輝打動人的地方，是他真誠的分享自己曾經遇到的一些挫折以及他從中學到了什麼。而那些他信口捏來的書中句子之所以聽着那麼的自然，是因爲他沒有爲了賣貨或賣弄學識而刻意的說句子，而是他只是那麼率真的專注於自己的書中世界在講讀書的快樂，我們爲之駐足，是因爲我們已經很久沒有看到這個沒有套路的世界了。看他的視頻可以難得的鬆開一點我們心裏的陳年疙瘩，看到他，我們會想到年輕時意氣風發的自己，也會看到一個愛讀書的年輕人該有的樣子。董宇輝感動我們的不是腹有詩書氣自華，而是他善良的初心與明媚的人格。</description></item><item><title>Java 中为什么要避免使用 Finalizer？</title><link>https://olzhy.github.io/posts/avoid-using-finalizers-in-java.html</link><pubDate>Wed, 06 Dec 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/avoid-using-finalizers-in-java.html</guid><description>Java 中的 finalize() 方法是 Object 类自带的一个方法，因所有的类都继承自 Object，所以所有类都是 Object 的子类，我们在子类重写 finalize() 方法就可以说使用了 Finalizer，使用其的目的一般是希望做一些对象销毁前最终的资源释放操作。而上文「Java try-with-resources 特性详解」里边介绍过，针对需要释放的资源，可以通过实现 AutoClosable 接口以及结合使用 try-with-resources 特性来实现。而 Finalizer，一般仅用于原生资源（非 Java 对象，不受 JVM 管理，一般通过调用原生方法来实现对其的释放）的释放这一个场景，除此之外，都应当避免对其的使用。</description></item><item><title>Java 建造者模式（Builder Pattern）知多少？</title><link>https://olzhy.github.io/posts/java-builder-pattern.html</link><pubDate>Tue, 05 Dec 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/java-builder-pattern.html</guid><description>因 Java 中没有命名参数的概念，当一个类的构造器可选参数太多的时候，代码可读性会变得很差。于是，建造者模式（Builder Pattern）应运而生。
本文首先举了一个真实的例子，引出构造器可选参数太多时应如何去处理的问题。然后，分析传统的伸缩式构造器模式与 JavaBeans 构造器模式在处理该问题时存在的不足；最后，引出了建造者模式，介绍了其设计思路与优点。</description></item><item><title>Java try-with-resources 特性详解</title><link>https://olzhy.github.io/posts/java-try-with-resources.html</link><pubDate>Thu, 30 Nov 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/java-try-with-resources.html</guid><description>&lt;p>Java 7 中引入了 &lt;code>try-with-resources&lt;/code> 特性来保证资源使用完毕后，自动进行关闭。任何实现了 &lt;code>java.lang.AutoCloseable&lt;/code> 接口的类，都可以看作是资源，也都可以使用该特性。本文将详细介绍该特性的使用方法与注意事项。&lt;/p></description></item><item><title>PostgreSQL JDBC Driver 42.3.0 读取 BigDecimal 时发生抹 0 的 Bug</title><link>https://olzhy.github.io/posts/postgres-jdbc-driver-issue.html</link><pubDate>Fri, 17 Nov 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/postgres-jdbc-driver-issue.html</guid><description>&lt;p>使用 Java 原生方式访问 PostgreSQL 数据库时，偶然发现 JDBC Driver 42.3.0 读取 BigDecimal 时发生小数点前的 0 全部被抹掉的 Bug，特记录于此。&lt;/p></description></item><item><title>Java 8：如何设计一个 Instant 与 String 互转的工具类？</title><link>https://olzhy.github.io/posts/java-instant-util.html</link><pubDate>Wed, 15 Nov 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/java-instant-util.html</guid><description>本文首先将介绍在 Java 8 之前，传统的 Date 与 String 相互转换的工具类是怎么实现的；接着再探索在 Java 8 新引入 Instant 后，如何实现 Instant 与 String 的互转，以及新的工具类的实现。</description></item><item><title>悼念兩位敬愛的人</title><link>https://olzhy.github.io/posts/mourn-for-mr-li-and-mr-wu.html</link><pubDate>Sun, 29 Oct 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/mourn-for-mr-li-and-mr-wu.html</guid><description>10 月 27 日，是一個讓全體中國人悲傷的日子。
27 日上午，先後驚聞克強總理、尊友先生突然去世的消息，心情久久不能平復。</description></item><item><title>人間有大愛</title><link>https://olzhy.github.io/posts/there-is-love-in-the-world.html</link><pubDate>Sat, 28 Oct 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/there-is-love-in-the-world.html</guid><description>26 號，下班回家後，太太跟我說今天偶然在朋友圈看到其三姨家姨姐發佈的一條水滴籌款的動態。
籌款描述裏說：「中秋前一天，孩子過馬路時被一輛轎車撞倒，到現在已過去 27 天，仍在重症病房搶救，還沒有完全蘇醒。肇事司機還未被交管部門定責，只賠付了一萬元。家裏的錢已快用光，急需社會人士提供幫助。」</description></item><item><title>PostgreSQL 数据定义相关知识总结</title><link>https://olzhy.github.io/posts/postgres-ddl.html</link><pubDate>Sun, 22 Oct 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/postgres-ddl.html</guid><description>本文的大部分内容翻译整理自 PostgreSQL 官方文档，作学习及知识总结之用。
本文依据官方 PostgreSQL 16 文档介绍如何创建数据库结构以保存数据。在关系型数据库中，原始数据存储在表里，所以本文主要介绍如何建表、修改表，以及有哪些可用的特性以控制所存储的数据。</description></item><item><title>PostgreSQL 表分区使用详解</title><link>https://olzhy.github.io/posts/postgres-table-partitioning.html</link><pubDate>Sat, 21 Oct 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/postgres-table-partitioning.html</guid><description>表分区指的是将逻辑上的一个大表分割为物理上的一个个小块，使用表分区可以带来性能上的提升与存储上的优化。PostgreSQL 支持基础的表分区功能。本文将依据官方 PostgreSQL 16 文档来介绍为什么使用表分区？以及表分区的具体使用方法。</description></item><item><title>PostgreSQL 表继承使用详解</title><link>https://olzhy.github.io/posts/postgres-table-inheritance.html</link><pubDate>Fri, 20 Oct 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/postgres-table-inheritance.html</guid><description>继承是来自于面向对象数据库的概念，其为数据库设计带来了新的可能性。
先看一个例子：假定我们正在构建一个数据模型来存储所有的城市，而城市中有的是普通城市，有的是省会城市，如何进行表设计呢？继承特性就能很巧妙的表示这种关系。
下面为建表语句：
-- 城市表 CREATE TABLE cities ( name varchar(100) PRIMARY KEY, -- 名称 population float8, -- 人口，单位为百万 elevation int, -- 平均海拔，单位为米 province varchar(100) -- 省份 ); -- 省会表 CREATE TABLE capitals () INHERITS (cities); 上面的capitals表继承了cities表的所有列。</description></item><item><title>尝试在 Java 中使用 Moshi JSON 库</title><link>https://olzhy.github.io/posts/try-using-moshi-json-library-in-java.html</link><pubDate>Sat, 14 Oct 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/try-using-moshi-json-library-in-java.html</guid><description>Moshi 是一个可用于 Java 与 Kotlin 的 JSON 序列化与反序列化库，其主要使用 Kotlin 编写。本文以样例代码的方式来演示该库在 Java 中的使用。</description></item><item><title>關於漢字</title><link>https://olzhy.github.io/posts/about-chinese-character.html</link><pubDate>Tue, 10 Oct 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/about-chinese-character.html</guid><description>今天在群裏看到一個朋友分享了一篇文章，說「中國迅速成爲科技大國，漢語在背後發揮了很重要的優勢」。
乍一看這個標題可能覺得有一點牽强，但仔細想想，的確有一定的道理。
我從事計算機行業，關於專業知識的一手資料基本都是英文的，所以平日裏接觸英文也比較多。不知是西方人的思維方式還是文字本身的緣由，英文資料給我的感覺是，不喜歡抽象而喜歡具體，知識之間的邊界比較明顯。爲了講清楚一個稍微大一點的概念會細分出很多相對隔離的枝節，每個部分講的事無巨細，生怕哪個點有歧義，簡直就是單一領域專研者的圭臬之選。但各個類別之間缺乏連通，少了一些匯總與歸納，當涉及的問題大一點的時候，需要翻閲大量相對獨立的枝葉，無法從最開始建立整體觀。
中文資料給人的感覺正好與前一種模式相反，喜歡抽象卻不喜歡具體，特別擅長做提綱挈領，容易一開始就能抓住事情的主幹，但到細節部分卻非常惜墨。這可能是我們的思維習慣造成的。對於一些細枝末節，中文思維可能會默認別人已心領神會，不屑於將其描述的明明白白，但到具體落地時，往往理解的千差萬別，容易出現問題。
這是我對英文與中文這兩種語言在使用現象上感受到的不同。因兩者一個代表表音文字，一個代表表意文字，這些語言使用者的習慣與思維模式的不同是否源於文字本身呢？哪種文字更能映射真實的世界呢？下面便作淺析。</description></item><item><title>2023 國慶假期回顧</title><link>https://olzhy.github.io/posts/the-national-day-holiday-2023.html</link><pubDate>Sun, 08 Oct 2023 22:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/the-national-day-holiday-2023.html</guid><description>9 月 29 號中秋節，我、太太和孩子一起乘坐大巴往岳父家趕，開始了我們的假期模式。大巴車上坐滿了人，幾乎不剩一個空餘的座位，果然是過節，路上非常的堵，大巴行駛極其緩慢。因早上沒吃主食，又喝了一大碗粥，上車沒多久就開始尿急了，痛苦難忍，趕緊上前告訴了司機師傅。恨不得車馬上就停下來，想著路邊只一顆能遮躰的樹就好，也理解了高速路上那些路邊小便的不文明的行爲，不經歷不知道，有的時候真的是不得已爲之。好不容易遇到了一個加油站，車停了下來，我便徑直飛向那裏邊的厠所，一撒爾儘，那叫一個酣暢淋漓，人生幾大樂事應該有一條「久憋逢厠所」。
到家後，和岳父收割了幾天玉米，做了些家務，帶了幾天孩子，看望了太太的親戚，還趕了農村的大集，吃了很甜的秋桃。</description></item><item><title>在 VS Code 中使用 REST Client 扩展做 API 测试</title><link>https://olzhy.github.io/posts/getting-started-with-vscode-extension-rest-client.html</link><pubDate>Thu, 05 Oct 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/getting-started-with-vscode-extension-rest-client.html</guid><description>VS Code 中有一个非常易用的、用于 API 测试的扩展，名为 REST Client。可以在 VS Code 中使用该扩展来发送 HTTP 请求及接收响应，其语法比 cURL 命令更简单，是我们开发人员在测试 API 时的一个不错的选择。</description></item></channel></rss>