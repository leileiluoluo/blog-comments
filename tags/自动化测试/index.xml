<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>自动化测试 on 磊磊落落</title><link>https://olzhy.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</link><description>Recent content in 自动化测试 on 磊磊落落</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>leileiluoluo@leileiluoluo.com (磊磊落落)</managingEditor><webMaster>leileiluoluo@leileiluoluo.com (磊磊落落)</webMaster><lastBuildDate>Tue, 03 Oct 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://olzhy.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml"/><item><title>在 VS Code 中使用 REST Client 扩展做 API 测试</title><link>https://olzhy.github.io/posts/getting-started-with-vscode-extension-rest-client.html</link><pubDate>Tue, 03 Oct 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/getting-started-with-vscode-extension-rest-client.html</guid><description>@baseUrl = https://api.github.com/repos/olzhy/olzhy.github.io @accessToken = ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx # @name createIssue POST {{baseUrl}}/issues Authorization: Bearer {{accessToken}} { &amp;#34;title&amp;#34;: &amp;#34;发现一个 Bug&amp;#34;, &amp;#34;body&amp;#34;: &amp;#34;请尽快解决！&amp;#34; } ### @newCreatedIssueNumber = {{createIssue.</description></item><item><title>Selenium 自动化测试最佳实践</title><link>https://olzhy.github.io/posts/selenium-best-practices.html</link><pubDate>Wed, 10 May 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/selenium-best-practices.html</guid><description>前两篇文章「Selenium WebDriver 基础使用」和「Selenium WebDriver 高级特性使用」分别介绍了 Selenium WebDriver 的基础功能和高级功能的使用。这两篇文章更多的是从底层实现细节的角度去练习 Selenium WebDriver API 的使用。</description></item><item><title>Selenium WebDriver 高级特性使用</title><link>https://olzhy.github.io/posts/selenium-webdriver-advanced-features.html</link><pubDate>Mon, 24 Apr 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/selenium-webdriver-advanced-features.html</guid><description>上文「Selenium WebDriver 基础使用」介绍了 Selenium WebDriver 基础功能的使用；本文将接着介绍 Selenium WebDriver 高级特性的使用，涉及页面加载策略、等待策略、元素定位与操作、浏览器操作。</description></item><item><title>Selenium WebDriver 基础使用</title><link>https://olzhy.github.io/posts/selenium-webdriver.html</link><pubDate>Fri, 21 Apr 2023 08:00:00 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/selenium-webdriver.html</guid><description>「Selenium」是一个支持 Web 浏览器自动化的开源项目，可使用其来模拟用户与浏览器的一系列交互行为。
本文分两个部分：首先会介绍一下 Selenium 的组成部分；接着会使用一个实际的例子介绍 WebDriver 如何使用。</description></item><item><title>Selenium Grid 搭建及使用</title><link>https://olzhy.github.io/posts/selenium-grid.html</link><pubDate>Tue, 30 Aug 2022 08:48:31 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/selenium-grid.html</guid><description>Selenium 测试的主要组成部分有：测试代码、WebDriver、Grid（Selenium Server，非必需）、浏览器驱动（Driver）和浏览器。
当我们编写完 Selenium 测试用例在本地调试时，WebDriver 通过浏览器驱动直接与浏览器进行交互。这时，WebDriver、浏览器驱动和浏览器位于同一主机。这种最基本的交互方式如下图所示。</description></item><item><title>Apache JMeter 初探</title><link>https://olzhy.github.io/posts/apache-jmeter-introduction.html</link><pubDate>Wed, 27 Jul 2022 14:13:31 +0800</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/apache-jmeter-introduction.html</guid><description>Apache JMeter 是一个使用纯 Java 编写的、由 Apache 软件基金会开源的、用于度量软件性能的负载测试工具。</description></item><item><title>Golang 使用 Selenium 实现自动化测试初探</title><link>https://olzhy.github.io/posts/golang-selenium.html</link><pubDate>Sat, 14 Mar 2020 00:00:16 +0000</pubDate><author>leileiluoluo@leileiluoluo.com (磊磊落落)</author><guid>https://olzhy.github.io/posts/golang-selenium.html</guid><description>Selenium 整合了一揽子工具与依赖库，支持 Web 浏览器自动化，提供一组扩展来模拟人与浏览器交互。我们基于其满足 W3C 标准的 WebDriver 来编写的自动化代码可在各种主流浏览器复用。</description></item></channel></rss>